name: Launch EC2 Instance in AWS

on:
  workflow_dispatch:
    inputs:
      altair_aws_region:
        description: "AWS region"
        required: true
        default: "us-east-1"
      altair_ami_id:
        description: "AMI ID for EC2"
        required: true
        default: "ami-0c02fb55956c7d316"
      altair_instance_type:
        description: "EC2 instance type"
        required: true
        default: "t2.micro"
      altair_instance_name:
        description: "Name of the EC2 instance"
        required: true
        default: "AltairInstance"
      altair_instance_password:
        description: "Password for EC2 instance"
        required: true
        default: "MySecurePassword123"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.6"

      - name: Initialize Terraform
        run: |
          cd vm-aws
          terraform init

      - name: Apply Terraform Configuration
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd vm-aws
          terraform apply -auto-approve \
            -var="altair_aws_region=${{ github.event.inputs.altair_aws_region }}" \
            -var="altair_ami_id=${{ github.event.inputs.altair_ami_id }}" \
            -var="altair_instance_type=${{ github.event.inputs.altair_instance_type }}" \
            -var="altair_instance_name=${{ github.event.inputs.altair_instance_name }}" \
            -var="altair_instance_password=${{ github.event.inputs.altair_instance_password }}"

      - name: Extract Public IP
        id: extract-ip
        run: |
          PUBLIC_IP=$(terraform output -raw altair_instance_public_ip || echo "ERROR")
          if [ "$PUBLIC_IP" = "ERROR" ] || [ -z "$PUBLIC_IP" ]; then
            echo "Failed to extract public IP. Exiting..."
            exit 1
          fi
          echo "public_ip=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: AWS EC2 Instance Created
          to: recipient@example.com
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            Hello,

            The AWS EC2 instance has been successfully created.

            Instance Details:
            - Public IP: ${{ env.public_ip }}

            You can connect to the instance using the following command:
            ssh ec2-user@${{ env.public_ip }}

