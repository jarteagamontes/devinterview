name: Create EC2 Instance with Outputs

on:
  workflow_dispatch:
    inputs:
      altair_aws_region:
        description: "AWS Region"
        required: true
        default: "us-east-1"
      altair_ami_id:
        description: "AMI ID for EC2"
        required: true
        default: "ami-0c02fb55956c7d316"
      altair_instance_type:
        description: "EC2 Instance Type"
        required: true
        default: "t2.micro"
      altair_instance_name:
        description: "Name of the EC2 Instance"
        required: true
        default: "AltairInstance"
      altair_instance_password:
        description: "Password for EC2 Instance"
        required: true

jobs:
  create-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.6"

      - name: Initialize Terraform
        run: |
          cd vm-aws
          terraform init
      - name: Apply Terraform Configuration
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd vm-aws
          terraform apply -auto-approve \
            -var="altair_aws_region=${{ github.event.inputs.altair_aws_region }}" \
            -var="altair_ami_id=${{ github.event.inputs.altair_ami_id }}" \
            -var="altair_instance_type=${{ github.event.inputs.altair_instance_type }}" \
            -var="altair_instance_name=${{ github.event.inputs.altair_instance_name }}" \
            -var="altair_instance_password=${{ github.event.inputs.altair_instance_password }}"
      - name: Extract Public IP
        id: extract-ip
        run: |
          cd vm-aws
          PUBLIC_IP=$(terraform output -raw altair_instance_public_ip || echo "ERROR")
          if [ "$PUBLIC_IP" = "ERROR" ] || [ -z "$PUBLIC_IP" ]; then
            echo "Failed to extract public IP. Exiting..."
            exit 1
          fi
          echo "::set-output name=public_ip::$PUBLIC_IP"
          echo "Extracted Public IP: $PUBLIC_IP"
      - name: Store Public IP in GitHub Secret
        uses: actions/github-script@v6
        with:
          script: |
            const publicIP = "${{ steps.extract-ip.outputs.public_ip }}";
            await github.actions.createOrUpdateRepoSecret({
              owner: context.repo.owner,
              repo: context.repo.repo,
              secret_name: "EC2_PUBLIC_IP",
              encrypted_value: publicIP,
            });

